{"version":3,"sources":["nav/components/navbar.js","products/components/productCard.js","products/containers/ProductsLayout.js","filters/components/Range.js","filters/components/StockQuantity.js","filters/components/Availability.js","filters/components/Subcategories.js","filters/components/Categories.js","filters/containers/FiltersLayout.js","banner/components/Banner.js","errors/components/regularError.js","errors/containers/handleError.js","reducers/products.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","state","handleError","totalPrice","_this","props","shoppingChart","products","total","map","product","price","replace","Number","quantity","totalItems","react_default","a","createElement","className","index_es","icon","size","this","Component","connect","ProductCard","href","onClick","handleAddToChart","id","available","src","img","name","ProductsLayout","productId","productPrice","dispatch","type","payload","console","log","_this2","category","length","index","productCard","key","filteredProducts","filters","Range","max","defaultValue","onChange","handleChangeRange","range","StockQuantity","handleDecreaseStock","stockQuantity","handleIncreaseStock","Availability","handleToggleAvailability","defaultChecked","htmlFor","Subcategories","subcategories","subcategory","concat","activeCategory","handleChangeCategory","sublevels","undefined","Categories","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","categories","buildCategoryTree","components_Subcategories","setState","FiltersLayout","event","objectSpread","target","value","sublevelId","data","components_Categories","components_Range","components_StockQuantity","components_Availability","Banner","RegularError","style","color","HandleError","error","info","regularError","children","action","localStorage","getItem","setItem","JSON","stringify","parse","filter","push","results","allProducts","sublevel_id","library","add","faCashRegister","faShoppingCart","faChevronDown","faPlus","faMinus","faArchive","initialState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_navbar","banner_components_Banner","containers_FiltersLayout","products_containers_ProductsLayout","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f57292b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { connect } from 'react-redux';\n\nimport './navbar.scss';\n\nclass Navbar extends Component {\n\n    state = {\n        handleError: false\n    }\n\n    totalPrice = () => {\n        if (this.props.shoppingChart.products) {\n            let total = 0;\n            this.props.shoppingChart.products.map(product => {\n                product.price = product.price.replace(',','');\n                return total = total + Number(product.price) * product.quantity;\n            });\n            return total;\n        }\n        return '';\n    }\n\n    totalItems = () => {\n        if (this.props.shoppingChart.products) {\n            let total = 0;\n            this.props.shoppingChart.products.map(product => {\n                return total = total + product.quantity;\n            });\n            return total;\n        }\n        return '';\n    }\n\n    render() {\n        return(\n            <nav className=\"navbar\">\n                <div className=\"container navbar-container\">\n                    <div className=\"navbar-brand\">\n                        <FontAwesomeIcon icon=\"cash-register\" size=\"2x\" />\n                        <h1 className=\"brand-title\">El Baratón</h1>\n                    </div>\n                    <div className=\"navbar-content\">\n                        <ul className=\"list list-none\">\n                            <li>\n                                <button className=\"btn btn-nothing nav-chart\">\n                                    <span>($ { this.totalPrice() })</span>\n                                    <FontAwesomeIcon icon=\"shopping-cart\" className=\"nav-chart-icon\"/>\n                                    <span><b>{ this.totalItems() }</b></span>\n                                    <FontAwesomeIcon icon=\"chevron-down\"  className=\"nav-chart-icon\"/>\n                                </button>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n}\n\nfunction mapStateToProps(state, props) {\n    return {\n        shoppingChart: state.shoppingChart\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport './ProductCard.scss';\n\nconst ProductCard = (props) => (\n    <a href=\"#!\" className=\"card product-card\">\n        <div className=\"card-header\">\n            <button className=\"btn btn-nothing\" onClick={ () => { props.handleAddToChart(props.product.id, props.product.price) } }>\n                <FontAwesomeIcon icon=\"shopping-cart\" />\n            </button>\n            <span className=\"card-price\">$ { props.product.price }</span>\n        </div>\n        <div className=\"card-body\">\n            {\n                props.product.available === false &&\n                <div className=\"available\">\n                    <label>No disponible</label>\n                </div>\n            }\n            <img src={ props.product.img } />\n        </div>\n        <div className=\"card-footer\">\n            <span>{ props.product.name }</span>\n        </div>\n    </a>\n);\n\nexport default ProductCard;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ProductCard from \"../components/productCard\";\n\nimport './ProductsLayout.scss';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nclass ProductsLayout extends Component {\n\n    handleAddToChart = (productId, productPrice) => {\n        this.props.dispatch({\n            type: 'ADD_TO_SHOPPING_CHART',\n            payload: {\n                productId,\n                productPrice\n            }\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.props)\n    }\n\n    render() {\n        return(\n            <div className=\"col-75 \">\n                <div>\n                    <h4 className=\"no-margin no-margin-top\">\n                        {\n                            this.props.category ?\n                                'Categoria' : 'Categorias'\n                        }\n                        :&nbsp;\n                        <span>\n                            { this.props.category ?\n                                this.props.category : 'Todas'\n                            }\n                        </span>\n                    </h4>\n                </div>\n                <div className=\"grid-products\">\n                    {\n                        this.props.products.length > 0 ? (\n                            this.props.products.map((product, index) => {\n                                return <ProductCard handleAddToChart={ this.handleAddToChart } key={ index } product={ product }/>\n                            })\n                        ) : (\n                            <div className=\"no-products\">\n                                <span>No hemos encontrado productos</span>\n                                <FontAwesomeIcon icon=\"shopping-cart\" className=\"nav-chart-icon\" size=\"6x\"/>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, props) {\n    return {\n        products: state.filteredProducts,\n        category: state.filters.category\n    }\n}\n\nexport default connect(mapStateToProps)(ProductsLayout);","import React from 'react';\n\nconst Range = (props) => (\n    <div className=\"filter-item\">\n        <label className=\"filter-item-head\">Price</label>\n        <div className=\"filter-item-body filter-group filter-range\">\n            <input type=\"range\" max=\"50000\" defaultValue={25000} onChange={ props.handleChangeRange }/>\n        </div>\n        <div className=\"filter-item-footer filter-group filter-range-values no-padding no-padding-top\">\n            <label>\n                .min $0\n            </label>\n            <label>\n                .max ${ props.range }\n            </label>\n        </div>\n    </div>\n)\n\nexport default Range;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst StockQuantity = (props) => (\n    <div className=\"filter-item\">\n        <label className=\"filter-item-head\">Cantidad en stock</label>\n        <div className=\"filter-item-body filter-group filter-group-quantity\">\n            <button onClick={ props.handleDecreaseStock }>\n                <FontAwesomeIcon icon=\"minus\" />\n            </button>\n            <label className=\"text-align text-align-center\">\n                {\n                    props.stockQuantity > 0 ?\n                    (props.stockQuantity) : ''\n                }\n            </label>\n            <button onClick={ props.handleIncreaseStock }>\n                <FontAwesomeIcon icon=\"plus\" />\n            </button>\n        </div>\n    </div>\n)\n\nexport default StockQuantity;","import React from 'react';\n\nconst Availability = (props) => (\n    <div className=\"filter-item\">\n        <label className=\"filter-item-head\">Disponibilidad</label>\n        <div className=\"filter-item-body\">\n            <input type=\"checkbox\" onChange={ props.handleToggleAvailability }\n                   defaultChecked={ props.available } id=\"available\"/>\n            <label htmlFor=\"available\">\n                Disponibilidad\n            </label>\n        </div>\n    </div>\n)\n\nexport default Availability;","import React from 'react';\n\nconst Subcategories = props => (\n    <ul className=\"no-margin no-margin-full no-padding no-padding-full list list-none subcategory-list\">\n        {\n            props.subcategories.map((subcategory, index) => {\n                return(\n                    <li className={ `subcategory-item ${ props.activeCategory === subcategory.id ? 'active' : '' }` } key={ index }>\n                        <a href=\"#!\" onClick={ () => { props.handleChangeCategory(subcategory.id) } }>{ subcategory.name }</a>\n                        {\n                            subcategory.sublevels !== null && subcategory.sublevels !== undefined &&\n                                <Subcategories subcategories={ subcategory.sublevels } handleChangeCategory={ props.handleChangeCategory }\n                                               activeCategory={ props.activeCategory }/>\n                        }\n                    </li>\n                )\n            })\n        }\n    </ul>\n)\n\nexport default Subcategories;","import React, { Component } from 'react';\nimport Subcategories from \"./Subcategories\";\n\nclass Categories extends Component {\n\n    state = {\n        categories: []\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.setState({ categories: this.props.categories });\n    }\n\n    buildCategoryTree = (category, index) => {\n        return (\n            <li className={ `category-item ${ this.props.activeCategory === category.id ? 'active' : '' }` } key={ index }>\n                <a href=\"#!\" onClick={ () => { this.props.handleChangeCategory(category.id) } }>{ category.name }</a>\n                {\n                    category.sublevels !== null &&\n                        <Subcategories subcategories={ category.sublevels } handleChangeCategory={ this.props.handleChangeCategory }\n                        activeCategory={ this.props.activeCategory }/>\n                }\n            </li>\n        )\n    }\n\n    render() {\n        return(\n            <div className=\"filter-item\">\n                <label className=\"filter-item-head\">Categories</label>\n                <div className=\"filter-item-body\">\n                    <ul className=\"filter-group filter-categories no-margin no-margin-full no-padding no-padding-full list list-none\">\n                        {\n                            this.state.categories.map((category, index) => {\n                                return this.buildCategoryTree(category, index)\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Categories;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Range from '../components/Range';\nimport StockQuantity from '../components/StockQuantity';\nimport Availability from '../components/Availability';\nimport Categories from '../components/Categories';\n\nimport './Filters.scss';\n\nimport data from './categories';\n\nclass FiltersLayout extends Component {\n\n    state = {\n        categories: {}\n    }\n\n    componentWillMount() {\n        this.setState({ categories: data.categories });\n        this.setState({ filters: this.props.filters })\n    }\n\n    componentDidUpdate() {\n        this.props.dispatch({\n            type: 'FILTER_PRODUCTS',\n            payload: {\n                ...this.state.filters\n            }\n        });\n    }\n\n    handleChangeRange = event => {\n        this.setState({ filters: { ...this.state.filters, range: event.target.value } });\n    }\n\n    handleIncreaseStock = () => {\n        this.setState({ filters: { ...this.state.filters, stockQuantity: this.state.filters.stockQuantity + 1 } });\n    }\n\n    handleDecreaseStock = () => {\n        this.setState({ filters: { ...this.state.filters, stockQuantity: this.state.filters.stockQuantity > 0 ? this.state.filters.stockQuantity - 1 : 0 } });\n    }\n\n    handleToggleAvailability = event => {\n        this.setState({ filters: { ...this.state.filters, available: !this.state.filters.available } });\n    }\n\n    handleChangeCategory = (sublevelId) => {\n        this.setState({ filters: { ...this.state.filters, category: sublevelId } });\n        this.props.dispatch({\n            type: 'FILTER_BY_CATEGORY',\n            payload: { category: sublevelId }\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"col-20\">\n                <div className=\"filters\">\n                    <div className=\"filter-row\">\n                        <Categories categories={ this.state.categories } handleChangeCategory={ this.handleChangeCategory }\n                                    activeCategory={ this.state.filters.category }/>\n                    </div>\n                </div>\n                <div className=\"filters\">\n                    <div className=\"filter-row\">\n                        <Range handleChangeRange={ this.handleChangeRange }\n                               range={ this.state.filters.range }/>\n                    </div>\n                    <div className=\"filter-row\">\n                        <StockQuantity handleIncreaseStock={ this.handleIncreaseStock }\n                                       handleDecreaseStock={ this.handleDecreaseStock }\n                                       stockQuantity={ this.state.filters.stockQuantity }/>\n                    </div>\n                    <div className=\"filter-row\">\n                        <Availability handleToggleAvailability={ this.handleToggleAvailability }\n                                      available={ this.state.filters.available }/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state, props) {\n    return {\n        filters: state.filters\n    }\n}\nexport default connect(mapStateToProps)(FiltersLayout);","import React from 'react';\n\nimport './Banner.scss';\n\nconst Banner = (props) => (\n    <div className=\"banner\">\n        <div className=\"banner-content color white-color\">\n            <h1 className=\"no-margin no-margin-top text-align text-align-center\">\n                Kitchen & Bar\n            </h1>\n            <h4 className=\"no-margin no-margin-bottom text-align text-align-center\">\n                564 Items\n            </h4>\n        </div>\n    </div>\n)\n\nexport default Banner;","import React from 'react';\n\nfunction RegularError(props) {\n    return (\n        <h1 style={{ color: 'white' }}>\n            Ha Ocurrido un errror\n        </h1>\n    )\n}\n\nexport default RegularError;","import React, { Component } from 'react';\n\nimport RegularError from '../components/regularError';\n\nclass HandleError extends Component {\n\n    state = {\n        handleError: false\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({handleError: true});\n    }\n\n    render() {\n        if (this.state.handleError) {\n            return (<RegularError />)\n        }\n        return this.props.children;\n    }\n}\n\nexport default HandleError;\n","function products(state, action) {\n    switch (action.type) {\n        case 'ADD_TO_SHOPPING_CHART': {\n            if (!localStorage.getItem('shoppingChart')) {\n                localStorage.setItem('shoppingChart', JSON.stringify({products: []}));\n            }\n            let shoppingChart = JSON.parse(localStorage.getItem('shoppingChart'));\n            let products = shoppingChart.products.filter(product => {\n                if (product.id === action.payload.productId) {\n                    product.quantity = product.quantity + 1;\n                    return true;\n                }\n                return false;\n            });\n            if (!products[0]) {\n                shoppingChart.products.push({id: action.payload.productId, quantity: 1, price: action.payload.productPrice});\n            } \n            localStorage.setItem('shoppingChart', JSON.stringify(shoppingChart));\n            return {\n                ...state,\n                shoppingChart: shoppingChart\n            }\n        }\n        case 'FILTER_PRODUCTS': {\n            console.log(action.payload)\n            let results = [];\n            if (action.payload.category !== undefined) {\n                results = state.allProducts.filter(product => {\n                    return product.available === action.payload.available\n                        && product.quantity >= action.payload.stockQuantity\n                        && Number(product.price.replace(/,/g, '')) <= action.payload.range\n                        && action.payload.category === product.sublevel_id;\n                });\n            } else {\n                results = state.allProducts.filter(product => {\n                    return product.available === action.payload.available\n                        && product.quantity >= action.payload.stockQuantity\n                        && Number(product.price.replace(/,/g, '')) <= action.payload.range;\n                });\n            }\n            return {\n                ...state,\n                filteredProducts: results\n            }\n        }\n        case 'FILTER_BY_CATEGORY': {\n            let results = [];\n            results = state.allProducts.filter(product => {\n                return action.payload.category === product.sublevel_id;\n            });\n            return {\n                ...state,\n                filteredProducts: results,\n                filters: { ...state.filters, category: action.payload.category }\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default products;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './App.scss';\n\nimport Navbar from './nav/components/navbar';\nimport ProductsLayout from './products/containers/ProductsLayout';\nimport FiltersLayout from './filters/containers/FiltersLayout';\nimport Banner from './banner/components/Banner';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCashRegister, faShoppingCart, faChevronDown, faPlus, faMinus, faArchive } from '@fortawesome/free-solid-svg-icons';\nimport HandleError from \"./errors/containers/handleError\";\n\nimport products from './reducers/products';\nimport data from './products/containers/products'\n\nlibrary.add(faCashRegister, faShoppingCart, faChevronDown, faPlus, faMinus, faArchive);\n\nconst initialState = {\n  allProducts: data.products,\n  filteredProducts: data.products,\n  shoppingChart: localStorage.getItem('shoppingChart') ? JSON.parse(localStorage.getItem('shoppingChart')) : {products: []},\n  filters: {\n    stockQuantity: 0,\n    available: true,\n    range: 25000,\n    category: undefined\n  }\n}\n\nconsole.log(initialState)\n\nconst store = createStore(\n    products,\n    initialState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nfunction App() {\n  return (\n      <HandleError>\n        <Provider store={ store }>\n          <div className=\"rappicommerce\">\n            <Navbar />\n            <div className=\"rappicommerce-content\">\n              <Banner/>\n              <div className=\"row center-row\">\n                <div className=\"container flex-container flex-space-between\">\n                  <FiltersLayout/>\n                  <ProductsLayout />\n                </div>\n              </div>\n            </div>\n            <footer className=\"main-footer\">\n              <div className=\"row center-row\">\n                <div className=\"container\">\n                  <h5>Francisco Javier barrera</h5>\n                </div>\n              </div>\n            </footer>\n          </div>\n        </Provider>\n      </HandleError>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}